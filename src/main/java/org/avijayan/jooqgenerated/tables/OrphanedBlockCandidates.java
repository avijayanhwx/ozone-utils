/*
 * This file is generated by jOOQ.
 */
package org.avijayan.jooqgenerated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.avijayan.jooqgenerated.DefaultSchema;
import org.avijayan.jooqgenerated.Indexes;
import org.avijayan.jooqgenerated.Keys;
import org.avijayan.jooqgenerated.tables.records.OrphanedBlockCandidatesRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrphanedBlockCandidates extends TableImpl<OrphanedBlockCandidatesRecord> {

    private static final long serialVersionUID = -301441093;

    /**
     * The reference instance of <code>orphaned_block_candidates</code>
     */
    public static final OrphanedBlockCandidates ORPHANED_BLOCK_CANDIDATES = new OrphanedBlockCandidates();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrphanedBlockCandidatesRecord> getRecordType() {
        return OrphanedBlockCandidatesRecord.class;
    }

    /**
     * The column <code>orphaned_block_candidates.run_id</code>.
     */
    public final TableField<OrphanedBlockCandidatesRecord, Integer> RUN_ID = createField("run_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>orphaned_block_candidates.run_timestamp</code>.
     */
    public final TableField<OrphanedBlockCandidatesRecord, Timestamp> RUN_TIMESTAMP = createField("run_timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>orphaned_block_candidates.container_id</code>.
     */
    public final TableField<OrphanedBlockCandidatesRecord, Long> CONTAINER_ID = createField("container_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>orphaned_block_candidates.local_id</code>.
     */
    public final TableField<OrphanedBlockCandidatesRecord, Long> LOCAL_ID = createField("local_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>orphaned_block_candidates</code> table reference
     */
    public OrphanedBlockCandidates() {
        this(DSL.name("orphaned_block_candidates"), null);
    }

    /**
     * Create an aliased <code>orphaned_block_candidates</code> table reference
     */
    public OrphanedBlockCandidates(String alias) {
        this(DSL.name(alias), ORPHANED_BLOCK_CANDIDATES);
    }

    /**
     * Create an aliased <code>orphaned_block_candidates</code> table reference
     */
    public OrphanedBlockCandidates(Name alias) {
        this(alias, ORPHANED_BLOCK_CANDIDATES);
    }

    private OrphanedBlockCandidates(Name alias, Table<OrphanedBlockCandidatesRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrphanedBlockCandidates(Name alias, Table<OrphanedBlockCandidatesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> OrphanedBlockCandidates(Table<O> child, ForeignKey<O, OrphanedBlockCandidatesRecord> key) {
        super(child, key, ORPHANED_BLOCK_CANDIDATES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SQLITE_AUTOINDEX_ORPHANED_BLOCK_CANDIDATES_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrphanedBlockCandidatesRecord> getPrimaryKey() {
        return Keys.PK_ORPHANED_BLOCK_CANDIDATES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrphanedBlockCandidatesRecord>> getKeys() {
        return Arrays.<UniqueKey<OrphanedBlockCandidatesRecord>>asList(Keys.PK_ORPHANED_BLOCK_CANDIDATES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanedBlockCandidates as(String alias) {
        return new OrphanedBlockCandidates(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanedBlockCandidates as(Name alias) {
        return new OrphanedBlockCandidates(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrphanedBlockCandidates rename(String name) {
        return new OrphanedBlockCandidates(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrphanedBlockCandidates rename(Name name) {
        return new OrphanedBlockCandidates(name, null);
    }
}
